<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	><channel>
	<title>晨之雨</title>
	<atom:link href="http://yisonli.github.io/rss2.xml" rel="self" type="application/rss+xml" />
	<link>http://yisonli.github.io/</link>
	<description>其实，有一种风景无需刻意寻觅就能随时随地感受到</description>
	<lastBuildDate>Fri, 03 Jun 2016 14:08:31 +0000</lastBuildDate>
	<language>zh-CN</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://yisonli.github.io/</generator>
  
  	<item>
		<title>Top K相关的一道题</title>
		<link>http://yisonli.github.io/article/21.html</link>
		<comments></comments>
		<pubDate>Fri, 03 Jun 2016 14:08:31 +0000</pubDate>
		<dc:creator><![CDATA[晨之雨]]></dc:creator>
    
		<category><![CDATA[编程算法]]></category>
    		<category><![CDATA[编程算法]]></category>
        
		<guid isPermaLink="false">http://yisonli.github.io/article/21.html</guid>
		<description><![CDATA[题目是： 假设有一个100亿行数据的文件，每一行都有两个字段，时间(年月日)和用户名，For Example:20160603,user_one20160603,user_two...不重复的用户可能有99亿个，单核CPU，512M内存，硬盘足够大；求如何找出记录数最多的10个用户&nbsp;鄙人之拙见：一般来说，解决的办法分为两步。1. 用hash_m]]></description>
    <content:encoded><![CDATA[题目是： 假设有一个100亿行数据的文件，每一行都有两个字段，时间(年月日)和用户名，For Example:20160603,user_one20160603,user_two...不重复的用户可能有99亿个，单核CPU，512M内存，硬盘足够大；求如何找出记录数最多的10个用户&nbsp;鄙人之拙见：一般来说，解决的办法分为两步。1. 用hash_m]]></content:encoded>
		<wfw:commentRss></wfw:commentRss>
		<slash:comments>0</slash:comments>
	</item>
	<item>
		<title>PHP7.0.7安装记录</title>
		<link>http://yisonli.github.io/article/15.html</link>
		<comments></comments>
		<pubDate>Fri, 03 Jun 2016 14:08:31 +0000</pubDate>
		<dc:creator><![CDATA[晨之雨]]></dc:creator>
    
		<category><![CDATA[PHP]]></category>
    		<category><![CDATA[PHP]]></category>
        
		<guid isPermaLink="false">http://yisonli.github.io/article/15.html</guid>
		<description><![CDATA[1.获取 PHP 指定版本，下载地址可以在这个页面找到：sudo wget http://cn2.php.net/distributions/php-7.0.7.tar.xztar -xvf php-7.0.7.tar.xz2.安装:sudo apt-get updatesudo apt-get install nginx mysql-client-core-5.6 git]]></description>
    <content:encoded><![CDATA[1.获取 PHP 指定版本，下载地址可以在这个页面找到：sudo wget http://cn2.php.net/distributions/php-7.0.7.tar.xztar -xvf php-7.0.7.tar.xz2.安装:sudo apt-get updatesudo apt-get install nginx mysql-client-core-5.6 git]]></content:encoded>
		<wfw:commentRss></wfw:commentRss>
		<slash:comments>0</slash:comments>
	</item>
	<item>
		<title>同时使用多个GITHUB的KEY的配置</title>
		<link>http://yisonli.github.io/article/7.html</link>
		<comments></comments>
		<pubDate>Fri, 03 Jun 2016 14:08:31 +0000</pubDate>
		<dc:creator><![CDATA[晨之雨]]></dc:creator>
    
		<category><![CDATA[GIT]]></category>
    		<category><![CDATA[GIT]]></category>
        
		<guid isPermaLink="false">http://yisonli.github.io/article/7.html</guid>
		<description><![CDATA[一、生成并添加第一个ssh key$ ssh-keygen -t rsa -C"youremail@xxx.com"执行命令一路回车，会在~/.ssh/目录下生成id_rsa和id_rsa.pub两个文件$ cat ~/.ssh/id_rsa.pub打开id_rsa.pub里的内容，在Github中添加SSH Keys（仓库1）二、生成并添加第二个ssh key$ ssh-]]></description>
    <content:encoded><![CDATA[一、生成并添加第一个ssh key$ ssh-keygen -t rsa -C"youremail@xxx.com"执行命令一路回车，会在~/.ssh/目录下生成id_rsa和id_rsa.pub两个文件$ cat ~/.ssh/id_rsa.pub打开id_rsa.pub里的内容，在Github中添加SSH Keys（仓库1）二、生成并添加第二个ssh key$ ssh-]]></content:encoded>
		<wfw:commentRss></wfw:commentRss>
		<slash:comments>0</slash:comments>
	</item>
	<item>
		<title>示例页面</title>
		<link>http://yisonli.github.io/article/2.html</link>
		<comments></comments>
		<pubDate>Fri, 03 Jun 2016 14:08:31 +0000</pubDate>
		<dc:creator><![CDATA[晨之雨]]></dc:creator>
    
		<category><![CDATA[]]></category>
        
		<guid isPermaLink="false">http://yisonli.github.io/article/2.html</guid>
		<description><![CDATA[这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样：我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。……或下面这样：XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的]]></description>
    <content:encoded><![CDATA[这是一个范例页面。它和博客文章不同，因为它的页面位置是固定的，同时会显示于您的博客导航栏（大多数主题中）。大多数人会新增一个“关于”页面向访客介绍自己。它可能类似下面这样：我是一个很有趣的人，我创建了工厂和庄园。并且，顺便提一下，我的妻子也很好。……或下面这样：XYZ装置公司成立于1971年，公司成立以来，我们一直向市民提供高品质的装置。我们位于北京市，有超过2,000名员工，对北京市有着相当大的]]></content:encoded>
		<wfw:commentRss></wfw:commentRss>
		<slash:comments>0</slash:comments>
	</item>
	<item>
		<title>世界，您好！</title>
		<link>http://yisonli.github.io/article/1.html</link>
		<comments></comments>
		<pubDate>Fri, 03 Jun 2016 14:08:31 +0000</pubDate>
		<dc:creator><![CDATA[晨之雨]]></dc:creator>
    
		<category><![CDATA[未分类]]></category>
    		<category><![CDATA[未分类]]></category>
        
		<guid isPermaLink="false">http://yisonli.github.io/article/1.html</guid>
		<description><![CDATA[欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！NICE]]></description>
    <content:encoded><![CDATA[欢迎使用WordPress。这是您的第一篇文章。编辑或删除它，然后开始写作吧！NICE]]></content:encoded>
		<wfw:commentRss></wfw:commentRss>
		<slash:comments>0</slash:comments>
	</item>

</channel>
</rss>